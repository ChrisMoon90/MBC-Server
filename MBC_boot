#!/bin/sh


### BEGIN INIT INFO
# Provides:          MoonBrew
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog 
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Auto-startup service for MoonBrew
# Description:       Start MoonBrew on RPi Startup
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/home/pi/MBC
DAEMON=$DIR/run.py
DAEMON_NAME=MoonBrew

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

timestamp() {
  date +"%T" # current time
}

do_start () {
    log_daemon_msg "Waiting for network..." $(timestamp)
    log_end_msg $?
    sleep 16
    log_daemon_msg "Starting $DAEMON_NAME daemon" $(timestamp)
    log_end_msg $?
    start-stop-daemon --start --background -v --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --chdir $DIR --startas $DAEMON -- $DAEMON_OPTS
    log_daemon_msg "$DAEMON_NAME has started"
    log_end_msg $?
}
do_stop () {
    log_daemon_msg "Stopping $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --remove-pidfile --retry 10
    killall -9 python
    log_end_msg $?
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0